#!/bin/bash

FILES=()
DATE=$(date +%Y-%m-%d-%H-%M-%S)
TMPDIR=$HOME/tmp/tqbatchmerge/$DATE
OUTPUT="samples_merged.root"


CLEAN=0
DEBUG=0
CHUNKS=2
JOBS=0

while [[ $# -gt 1 ]]; do
    key="$1"
    case $key in
	--options)
	    shift
	    ARGS="$@"
	    break
	    ;;
        --clean)
            CLEAN=1
            ;;
        --debug)
            DEBUG=1
            ;;
	-n)
	    CHUNKS="$2"
	    shift 
	    ;;
	-j)
	    JOBS="$2"
	    shift 
	    ;;
	--tmp)
	    TMPDIR="$2"
	    shift 
	    ;;
	*)
	    FNAME=$1
	    if [ -f $FNAME ]; then
		FILES+=($(cd "$(dirname "$FNAME")"; pwd)/$(basename "$FNAME"))
	    else
		echo "unknown option: $1"
		exit
	    fi
	    ;;
    esac
    shift # past argument or value
done

if [ $JOBS -lt $CHUNKS ]; then
    JOBS=$CHUNKS
fi
SAMPLES=$TMPDIR/samples
LOGS=$TMPDIR/logs

mkdir -p $TMPDIR
if [ $CLEAN -gt 0 ]; then
    rm -rf $TMPDIR/*
fi
mkdir -p $SAMPLES $LOGS

TMPFILES=()
NFILES=${#FILES[@]}

for((i=0; i < $NFILES; i+=JOBS)); do
    DOSUBMIT=0
    cmds=""
    debugcmds=""
    for((j=0; j < JOBS; j+=CHUNKS)); do
	TMPOUT=$SAMPLES/tmp.$i.$j.root
	startIdx=$((i+j))
	if [ $j -gt $JOBS ]; then
	    stopIdx=$((JOBS-j))
	else
	    stopIdx=$CHUNKS
	fi
	part=( "${FILES[@]:startIdx:stopIdx}" )
        if [ -z "${part[*]}" ]; then
            continue
        fi
	cmd="$TQPATH/share/tqmerge ${ARGS[@]} ${part[*]} -o $TMPOUT"
        debugcmds=$debugcmds$";"$cmd
        if [ -f $TMPOUT ]; then
            continue
        fi
	cmds=$cmds$'\n'$cmd
        DOSUBMIT=1
    done
    if [ $DEBUG -gt 0 ]; then
        echo "debug:"
        echo $debugcmds
    fi
    if [ $DOSUBMIT -gt 0 ]; then
        echo "now submitting job $i"
        qsub -N tqmerge.$i -q short -e $LOGS/tqmerge$i.stderr.log -o $LOGS/tqmerge$i.stdout.log  <<EOF
#!/bin/bash
cd /tmp/
source $ROOTCOREBIN/../rcSetup.sh
$cmds
EOF
        TMPFILES+=($TMPOUT)
    else
        echo "skipping job $i, all output files already present!"
    fi
done

